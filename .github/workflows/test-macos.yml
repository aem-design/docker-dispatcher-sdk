name: test-macos

on:
  workflow_run:
    workflows: ["build"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:

jobs:
  test-macos-arm64:
    name: Test ARM64 on Apple Silicon
    runs-on: macos-14
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Set environment variables
        id: config
        run: |
          source <(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/github_get_config.sh)
          source <(curl -sL https://github.com/aem-design/aemdesign-docker/releases/latest/download/github_get_version.sh)
      
      - name: Install Docker via Homebrew
        run: |
          echo "Installing Docker CLI and Docker Compose..."
          brew install docker docker-compose
          
          echo "Installing Lima (lightweight VM)..."
          brew install lima
          
      - name: Start Lima VM with Docker
        run: |
          echo "Starting Lima VM with Docker template..."
          limactl start --name=docker --vm-type=vz --arch=aarch64 --cpus=2 --memory=4 template://docker
          
          echo "Configuring Docker context..."
          export DOCKER_HOST="unix://$HOME/.lima/docker/sock/docker.sock"
          docker context create lima-docker --docker "host=unix://$HOME/.lima/docker/sock/docker.sock"
          docker context use lima-docker
          
          echo "Verifying Docker..."
          docker version
          docker info
      
      - name: Login to GitHub Container Registry
        run: |
          export DOCKER_HOST="unix://$HOME/.lima/docker/sock/docker.sock"
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      
      - name: Pull and test ARM64 image
        run: |
          export DOCKER_HOST="unix://$HOME/.lima/docker/sock/docker.sock"
          
          echo "Pulling arm64 image..."
          docker pull --platform linux/arm64 ghcr.io/${{ github.repository_owner }}/$IMAGE:$GIT_BRANCH
          
          echo "Inspecting image architecture..."
          docker inspect ghcr.io/${{ github.repository_owner }}/$IMAGE:$GIT_BRANCH --format='Platform: {{.Os}}/{{.Architecture}}'
          
          echo "Running tests..."
          cd test && bash ./run_tests.sh "ghcr.io/${{ github.repository_owner }}/$IMAGE:$GIT_BRANCH"
      
      - name: Show logs on failure
        if: failure()
        run: |
          export DOCKER_HOST="unix://$HOME/.lima/docker/sock/docker.sock"
          echo "=== Docker Logs ==="
          docker ps -a
          docker compose -f test/docker-compose.yml logs || true
      
      - name: Cleanup Lima VM
        if: always()
        run: |
          limactl stop docker || true
          limactl delete docker || true
